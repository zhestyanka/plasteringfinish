import { NextRequest, NextResponse } from 'next/server'
import { promises as fs } from 'fs'
import path from 'path'

const contentFilePath = path.join(process.cwd(), 'data', 'content.json')

export async function POST(request: NextRequest) {
  try {
    const formData = await request.json()
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!formData.name || !formData.phone) {
      return NextResponse.json(
        { success: false, message: '–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è' },
        { status: 400 }
      )
    }

    // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ content.json
    let recipientEmail = '9110163777@rambler.ru' // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    try {
      const contentData = await fs.readFile(contentFilePath, 'utf-8')
      const content = JSON.parse(contentData)
      console.log('üìß –ß–∏—Ç–∞–µ–º email –∏–∑ content.json:', content.contacts?.email || '–Ω–µ –Ω–∞–π–¥–µ–Ω')
      if (content.contacts && content.contacts.email) {
        recipientEmail = content.contacts.email
        console.log('‚úÖ Email —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω:', recipientEmail)
      } else {
        console.log('‚ö†Ô∏è Email –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ content.json, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', recipientEmail)
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è content.json, –∏—Å–ø–æ–ª—å–∑—É–µ–º email –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', recipientEmail)
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error)
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–æ—Ä–º—ã –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–º—É –ø–∏—Å—å–º–∞
    let emailSubject = '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞'
    let formType = '–æ–±—â–∞—è'
    
    if (formData.service) {
      emailSubject = `–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥—É: ${formData.service}`
      formType = '—É—Å–ª—É–≥–∞'
    } else if (formData.area) {
      emailSubject = `–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—á–µ—Ç: ${formData.area} –º¬≤`
      formType = '—Ä–∞—Å—á–µ—Ç'
    } else if (formData.message && formData.message.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è')) {
      emailSubject = '–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'
      formType = '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –ø–∏—Å—å–º–∞
    const emailBody = `
=== –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê ===

–¢–∏–ø –∑–∞—è–≤–∫–∏: ${formType}
–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–õ–ò–ï–ù–¢–ï:
–ò–º—è: ${formData.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
Email: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}

${formData.area ? `–ü–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è: ${formData.area} –º¬≤` : ''}
${formData.service ? `–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è —É—Å–ª—É–≥–∞: ${formData.service}` : ''}

–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}

---
–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞: ${request.headers.get('origin') || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
IP –∞–¥—Ä–µ—Å: ${request.headers.get('x-forwarded-for') || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
User-Agent: ${request.headers.get('user-agent') || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
    `.trim()

    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
    console.log('=== –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê ===')
    console.log('–ü–æ–ª—É—á–∞—Ç–µ–ª—å:', recipientEmail)
    console.log('–¢–µ–º–∞:', emailSubject)
    console.log('–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:', emailBody)
    console.log('========================')

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ø–æ—á—Ç—É
    try {
      const emailResponse = await fetch(`${request.nextUrl.origin}/api/send-email`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          to: recipientEmail,
          subject: emailSubject,
          text: emailBody
        })
      })

      if (emailResponse.ok) {
        console.log('‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞:', recipientEmail)
      } else {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email, –Ω–æ –∑–∞—è–≤–∫–∞ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞')
      }
    } catch (emailError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email, –Ω–æ –∑–∞—è–≤–∫–∞ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞:', emailError)
    }

    return NextResponse.json({ 
      success: true, 
      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.' 
    })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error)
    return NextResponse.json(
      { success: false, message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' },
      { status: 500 }
    )
  }
}

