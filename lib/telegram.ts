import TelegramBot from 'node-telegram-bot-api'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || ''
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID || ''

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: false })

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –≤ Telegram
 */
export async function sendTelegramNotification(formData: any) {
  try {
    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.warn('Telegram bot token –∏–ª–∏ chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
      return false
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = formatTelegramMessage(formData)
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.sendMessage(TELEGRAM_CHAT_ID, message, {
      parse_mode: 'HTML',
      disable_web_page_preview: true
    })

    console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram')
    return true
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error)
    return false
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –¥–ª—è Telegram
 */
function formatTelegramMessage(data: any): string {
  const timestamp = new Date().toLocaleString('ru-RU')
  
  let message = `üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</b>\n\n`
  message += `üìÖ <b>–î–∞—Ç–∞:</b> ${timestamp}\n\n`

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (data.name) message += `üë§ <b>–ò–º—è:</b> ${data.name}\n`
  if (data.phone) message += `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.phone}\n`
  if (data.email) message += `üìß <b>Email:</b> ${data.email}\n`
  
  // –ê–¥—Ä–µ—Å
  if (data.address) message += `üìç <b>–ê–¥—Ä–µ—Å:</b> ${data.address}\n`
  
  // –ü–ª–æ—â–∞–¥—å –∏ —Ç–∏–ø —Ä–∞–±–æ—Ç
  if (data.area) message += `üìè <b>–ü–ª–æ—â–∞–¥—å:</b> ${data.area}\n`
  if (data.workType) message += `üî® <b>–¢–∏–ø —Ä–∞–±–æ—Ç:</b> ${data.workType}\n`
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (data.description) {
    message += `\nüìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n${data.description}\n`
  }
  
  // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (data.contactMethod) {
    message += `\nüìû <b>–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏:</b> ${data.contactMethod}\n`
  }
  
  // –í—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞
  if (data.callTime) {
    message += `‚è∞ <b>–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞:</b> ${data.callTime}\n`
  }

  // –ò—Å—Ç–æ—á–Ω–∏–∫ –∑–∞—è–≤–∫–∏
  if (data.source) {
    message += `\nüåê <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> ${data.source}\n`
  }

  // URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (data.pageUrl) {
    message += `üîó <b>–°—Ç—Ä–∞–Ω–∏—Ü–∞:</b> ${data.pageUrl}\n`
  }

  message += `\n‚ö° <b>–¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!</b>`

  return message
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 */
export async function sendTestTelegramMessage(): Promise<boolean> {
  try {
    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.warn('Telegram bot token –∏–ª–∏ chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
      return false
    }

    const testMessage = `üß™ <b>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>\n\n‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\nüìÖ ${new Date().toLocaleString('ru-RU')}`
    
    await bot.sendMessage(TELEGRAM_CHAT_ID, testMessage, {
      parse_mode: 'HTML'
    })

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram')
    return true
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
    return false
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
 */
export function checkTelegramConfig(): boolean {
  return !!(TELEGRAM_BOT_TOKEN && TELEGRAM_CHAT_ID)
}
